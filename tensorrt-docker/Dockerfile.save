# Use the NVIDIA CUDA 11.8 base image
FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    lsb-release \
    gnupg2 \
    curl \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Add ROS Noetic repository
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

# Add ROS key
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

# Install ROS Noetic
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ros-noetic-desktop-full \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && \
    rosdep update

# Install TensorRT 8.5.2
RUN wget https://developer.download.nvidia.com/compute/machine-learning/tensorrt/secure/8.5.2/local_repos/nv-tensorrt-repo-ubuntu2004-cuda11.8-trt8.5.2.2-e8c3fcd5_1-1_amd64.deb && \
    dpkg -i nv-tensorrt-repo-ubuntu2004-cuda11.8-trt8.5.2.2-e8c3fcd5_1-1_amd64.deb && \
    apt-key add /var/nv-tensorrt-repo-cuda11.8-trt8.5.2.2-e8c3fcd5/7fa2af80.pub && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    tensorrt \
    python3-libnvinfer     && rm -rf /var/lib/apt/lists/*

# Install additional Python packages if needed
RUN pip3 install --no-cache-dir numpy

# Source ROS set
